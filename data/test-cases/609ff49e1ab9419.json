{
  "uid" : "609ff49e1ab9419",
  "name" : "Ex3: Testing notification settings on Settings screen",
  "fullName" : "tests.test_profile#test_notification_settings",
  "historyId" : "8a45008dd08844b2a4d0010f06f76696",
  "time" : {
    "start" : 1643286058977,
    "stop" : 1643286067736,
    "duration" : 8759
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nStacktrace:\nStaleElementReferenceError: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\n    at errorFromW3CJsonCode (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:780:25)\n    at ProxyRequestError.getActualError (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:663:14)\n    at asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)",
  "statusTrace" : "appdriver = <appium.webdriver.webdriver.WebDriver (session=\"8842ca66-35e3-4a66-ad09-0e54d5fcd057\")>, set_up = None\n\n    @allure.title('Ex3: Testing notification settings on Settings screen')\n    def test_notification_settings(appdriver, set_up):\n        # OnboardScreen(appdriver).give_allow_bluetooth()\n        # OnboardScreen(appdriver).press_skip_button()\n        # OnboardScreen(appdriver).press_already_have_an_account()\n        # # Sign Up\n        # email = FakeMailBox().generate_temporary_mailbox_and_email()\n        # uid = RealtimeDatabase().generate_new_user_with_shoes(email)\n        #\n        # SignInSignUpScreen(appdriver).click_and_clear_email_text_field(email)\n        # SignInSignUpScreen(appdriver).press_sign_in_button()\n        # #\n        # link = FakeMailBox().get_link_from_user_mail_box()\n        # SignInSignUpScreen(appdriver).open_authorization_link_for_simulator(link)\n        # PairingProcessScreen(appdriver).press_allows_pop_ups()\n        MainScreen(appdriver).open_profile_tub()\n        ProfileScreen(appdriver).open_setting_screen()\n        SettingsScreen(appdriver).open_notification_settings()\n>       SettingsScreen(appdriver).check_notification_settings()\n\ntests/test_profile.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/page_object/settings_screen.py:55: in check_notification_settings\n    super()._get_wait_for_element_clickable(self._system_notification,4)\nsrc/page_object/base_page.py:243: in _get_wait_for_element_clickable\n    WebDriverWait(self._driver, time_out).until(\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:78: in until\n    value = method(self._driver)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:327: in _predicate\n    target = visibility_of(target)(driver)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:143: in _predicate\n    return _element_if_visible(element)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:149: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/webelement.py:79: in is_displayed\n    return self._execute(RemoteCommand.IS_ELEMENT_DISPLAYED)['value']\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:693: in _execute\n    return self._parent.execute(command, params)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:418: in execute\n    self.error_handler.check_response(response)\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py:31: in check_response\n    raise wde\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x10d97ea30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"The previously found element \\\\\"\\\\\"No...asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nE       Stacktrace:\nE       StaleElementReferenceError: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nE           at errorFromW3CJsonCode (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:780:25)\nE           at ProxyRequestError.getActualError (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:663:14)\nE           at asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)\n\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "appdriver",
    "time" : {
      "start" : 1643285873184,
      "stop" : 1643285879190,
      "duration" : 6006
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "run_around_tests",
    "time" : {
      "start" : 1643285879190,
      "stop" : 1643285879190,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "set_up",
    "time" : {
      "start" : 1643286054282,
      "stop" : 1643286058977,
      "duration" : 4695
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nStacktrace:\nStaleElementReferenceError: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\n    at errorFromW3CJsonCode (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:780:25)\n    at ProxyRequestError.getActualError (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:663:14)\n    at asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)",
    "statusTrace" : "appdriver = <appium.webdriver.webdriver.WebDriver (session=\"8842ca66-35e3-4a66-ad09-0e54d5fcd057\")>, set_up = None\n\n    @allure.title('Ex3: Testing notification settings on Settings screen')\n    def test_notification_settings(appdriver, set_up):\n        # OnboardScreen(appdriver).give_allow_bluetooth()\n        # OnboardScreen(appdriver).press_skip_button()\n        # OnboardScreen(appdriver).press_already_have_an_account()\n        # # Sign Up\n        # email = FakeMailBox().generate_temporary_mailbox_and_email()\n        # uid = RealtimeDatabase().generate_new_user_with_shoes(email)\n        #\n        # SignInSignUpScreen(appdriver).click_and_clear_email_text_field(email)\n        # SignInSignUpScreen(appdriver).press_sign_in_button()\n        # #\n        # link = FakeMailBox().get_link_from_user_mail_box()\n        # SignInSignUpScreen(appdriver).open_authorization_link_for_simulator(link)\n        # PairingProcessScreen(appdriver).press_allows_pop_ups()\n        MainScreen(appdriver).open_profile_tub()\n        ProfileScreen(appdriver).open_setting_screen()\n        SettingsScreen(appdriver).open_notification_settings()\n>       SettingsScreen(appdriver).check_notification_settings()\n\ntests/test_profile.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/page_object/settings_screen.py:55: in check_notification_settings\n    super()._get_wait_for_element_clickable(self._system_notification,4)\nsrc/page_object/base_page.py:243: in _get_wait_for_element_clickable\n    WebDriverWait(self._driver, time_out).until(\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:78: in until\n    value = method(self._driver)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:327: in _predicate\n    target = visibility_of(target)(driver)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:143: in _predicate\n    return _element_if_visible(element)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:149: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/webelement.py:79: in is_displayed\n    return self._execute(RemoteCommand.IS_ELEMENT_DISPLAYED)['value']\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:693: in _execute\n    return self._parent.execute(command, params)\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:418: in execute\n    self.error_handler.check_response(response)\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py:31: in check_response\n    raise wde\n../running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x10d97ea30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"The previously found element \\\\\"\\\\\"No...asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nE       Stacktrace:\nE       StaleElementReferenceError: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nE           at errorFromW3CJsonCode (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:780:25)\nE           at ProxyRequestError.getActualError (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:663:14)\nE           at asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)\n\n../running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:243: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Press \"Profile\" button on Main screen",
      "time" : {
        "start" : 1643286058977,
        "stop" : 1643286059705,
        "duration" : 728
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "User open \"Settings\" screen on PROFILE screen",
      "time" : {
        "start" : 1643286059705,
        "stop" : 1643286060446,
        "duration" : 741
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Open notification settings",
      "time" : {
        "start" : 1643286060447,
        "stop" : 1643286061077,
        "duration" : 630
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Check notification settings at system settings",
      "time" : {
        "start" : 1643286061077,
        "stop" : 1643286067727,
        "duration" : 6650
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\nStacktrace:\nStaleElementReferenceError: The previously found element \"\"Notifications\" StaticText\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: Error getting main window kAXErrorServerNotFound\n    at errorFromW3CJsonCode (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:780:25)\n    at ProxyRequestError.getActualError (/Users/Alex/.appium/appium-xcuitest-driver/node_modules/appium-base-driver/lib/protocol/errors.js:663:14)\n    at asyncHandler (/usr/local/lib/node_modules/appium/node_modules/@appium/base-driver/lib/protocol/protocol.js:374:25)\n",
      "statusTrace" : "  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/Alex/PycharmProjects/baliston-test/src/page_object/settings_screen.py\", line 55, in check_notification_settings\n    super()._get_wait_for_element_clickable(self._system_notification,4)\n  File \"/Users/Alex/PycharmProjects/baliston-test/src/page_object/base_page.py\", line 243, in _get_wait_for_element_clickable\n    WebDriverWait(self._driver, time_out).until(\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 78, in until\n    value = method(self._driver)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 327, in _predicate\n    target = visibility_of(target)(driver)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 143, in _predicate\n    return _element_if_visible(element)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 149, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/appium/webdriver/webelement.py\", line 79, in is_displayed\n    return self._execute(RemoteCommand.IS_ELEMENT_DISPLAYED)['value']\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 693, in _execute\n    return self._parent.execute(command, params)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 418, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py\", line 31, in check_response\n    raise wde\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py\", line 26, in check_response\n    super().check_response(response)\n  File \"/Users/Alex/PycharmProjects/running-test/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "run_around_tests::0",
    "time" : {
      "start" : 1643286082083,
      "stop" : 1643286082083,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "appdriver::0",
    "time" : {
      "start" : 1643286082085,
      "stop" : 1643286083229,
      "duration" : 1144
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "427633abf677fefe",
      "name" : "screenshot",
      "source" : "427633abf677fefe.png",
      "type" : "image/png",
      "size" : 285179
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_profile"
  }, {
    "name" : "host",
    "value" : "MacBooks-MacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "23043-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_profile"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "609ff49e1ab9419.json",
  "parameterValues" : [ ]
}